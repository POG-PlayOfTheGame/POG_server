name: Integration Test
on:
  pull_request:
    branches:
      - develop
      - master
  push:
    branches:
      - feature/pr-test

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:14
    # 아래 defaults 의 run 설정은 node 루트 경로와 저장소 루트가 일치하지 않아 추가됨
    # 일반 프로젝트에는 필요없음
    env:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      LOGGING: false
      SYNCHRONIZE: false
      DB_TEST_HOST: rdb
      DB_TEST_PORT: 5432
      DB_TEST_NAME: postgres
      DB_TEST_USERNAME: pogTest
      DB_TEST_PASSWORD: pogTest123
      TEST_LOGGING: false
      TEST_SYNCHRONIZE: true
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      REDIS_ENDPOINT: ${{ secrets.REDIS_ENDPOINT }}
      API_KEY: ${{ secrets.API_KEY }}

    # 서비스 아래의 rdb, cache 값은 다른 값으로 설정 가능하며 해당 서비스의 DOMAIN NAME 으로 사용됩니다.
    # 모든 설정 방법은 docker 설정과 일치합니다. 에를 들어 port 값은 좌측은 외부 port 우측은 포워딩 되는 내부 포트입니다.
    services:
      rdb:
        image: postgres:12
        env:
          POSTGRES_USER: pogTest
          POSTGRES_PASSWORD: pogTest123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432


      cache:
        image: redis:6
        ports:
          - 6379:6379

    steps:
      # 아래의 명령문들이 테스트를 하기 위한 설정 및 실행들 입니다. run 하나가 Linux 에서의 명령문입니다.
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: setup node environment
        run: npm ci

      - name: Install RDB Dependencies
        run: apt-get update && apt-get install -y postgresql-client

      # - name: Initialize RDB PostgreSQL
      #   run: psql -h localhost -p 5432 -U pogTest -W pogTest123

      - name: Test with DB
        run: npx jest --runInBand --detectOpenHandles --forceExit

      - name: Success
        run: echo Test Completed Successfully.
